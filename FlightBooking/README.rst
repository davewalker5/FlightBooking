flight_booking
==============
A tutorial/demonstration project implementing a Python package for creating and managing airline flight bookings and
passengers.

The project was inspired by an example in the "Core Python : Getting Started" PluralSight course by Austin
Bingham and Robert Smallshire.

The boarding card template is taken from the following Codepen by @ramiru:

https://codepen.io/ramiru/pen/oXmyyy

Example
-------
The following example shows how to:

    - Create a flight
    - Add a passenger to the flight
    - Allocate a seat to the passenger
    - Save the flight data for later retrieval
    - Reload the saved flight data

The project also contains an "example.py" alongside the source code that runs a similar example.

::

    import datetime
    from flight_booking import *

    # Create a flight
    flight = Flight(
        airline="EasyJet",
        number="U25142",
        embarkation="ALC",
        destination="LGW",
        departs=datetime.datetime(2021, 10, 18, 21, 45, 0),
        duration=datetime.timedelta(hours=2, minutes=15)
    )

    # Load the seating plan for the aircraft
    flight.load_seating("A320", "1")

    # Create a passenger and add them to the flight and allocate a seat
    passenger = create_passenger(
        "Some Passenger",
        "M",
        datetime.datetime(1980, 1, 1),
        "United Kingdom",
        "United Kingdom",
        "123456789")
    flight.add_passenger(passenger)
    flight.allocate_seat("2A", passenger["id"])

    # Save and reload the flight
    flight.save()
    loaded = Flight.load_flight("U25142", datetime.datetime(2021, 10, 18, 21, 45, 0))

Unit Tests and Coverage
-----------------------

A coverage report can be generated by running the following command from the project folder:

::

    coverage run --branch --source src -m unittest discover
    coverage html -d cov_html

This will  create a folder "cov_html" containing the coverage report in HTML format.

Dependencies
------------
The core flight booking application has no external dependencies but one or more of the boarding card generators are
required to generate and save boarding cards and they introduce their own dependencies. See the requirements.txt files
for the generator plugins for dependencies. Also, "coverage" should be installed to run the code coverage report.

License
-------
This software is licensed under the MIT License:

https://opensource.org/licenses/MIT

Copyright 2021 David Walker

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.